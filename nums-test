#!/bin/bash

assert_eq() {
  expect="$1"
  actual="$2"
  msg="$3"
  if [ "$expect" == "$actual" ]; then
    echo "assert_eq $msg expect:$expect actual:$actual SUCCESS"
  else
    echo "assert_eq $msg expect:$expect actual:$actual FAILURE"
  fi
}

x=$(echo "1 2 4"       | ./nums --n)                             && assert_eq 3 "$x" "n"
x=$(echo "1 2 4"       | ./nums --count)                         && assert_eq 3 "$x" "count"
x=$(echo "1 2 4"       | ./nums --length)                        && assert_eq 3 "$x" "length"

x=$(echo "1 2 4"       | ./nums --minimum)                       && assert_eq 1 "$x" "minimum"
x=$(echo "1 2 4"       | ./nums --min)                           && assert_eq 1 "$x" "min"

x=$(echo "1 2 4"       | ./nums --maximum)                       && assert_eq 4 "$x" "maximum"
x=$(echo "1 2 4"       | ./nums --max)                           && assert_eq 4 "$x" "max"

x=$(echo "1 2 4"       | ./nums --range)                         && assert_eq 3 "$x" "range"
x=$(echo "1 2 4"       | ./nums --spread)                        && assert_eq 3 "$x" "spread"

x=$(echo "1 2 4"       | ./nums --sum)                           && assert_eq 7 "$x" "sum"
x=$(echo "1 2 4"       | ./nums --total)                         && assert_eq 7 "$x" "total"

x=$(echo "1 2 4"       | ./nums --mean)                          && assert_eq 2.33333 "$x" "mean"
x=$(echo "1 2 4"       | ./nums --average)                       && assert_eq 2.33333 "$x" "average"

x=$(echo "1 2 4"       | ./nums --median)                        && assert_eq 2 "$x" "median"
x=$(echo "1 2 4"       | ./nums --median)                        && assert_eq 2 "$x" "median"

x=$(echo "1 2 4"       | ./nums --middle)                        && assert_eq 2 "$x" "middle"
x=$(echo "1 2 4"       | ./nums --mid)                           && assert_eq 2 "$x" "mid"

x=$(echo "1 2 4 4"     | ./nums --mode)                          && assert_eq 4 "$x" "mode with unimodal"
x=$(echo "1 2 2 4 4"   | ./nums --mode)                          && assert_eq 2 "$x" "mode with bimodal"
x=$(echo "1 2 4"       | ./nums --mode)                          && assert_eq "NAN" "$x" "mode with nonmodal"

x=$(echo "1 2 4 4"     | ./nums --modes)                         && assert_eq 4 "$x" "modes with unimodal"
x=$(echo "1 2 2 4 4"   | ./nums --modes)                         && assert_eq "2 4" "$x" "mode with bimodal"
x=$(echo "1 2 4"       | ./nums --modes)                         && assert_eq "NAN" "$x" "mode with nonmodal"

x=$(echo "1 2 4"       | ./nums --ss)                            && assert_eq 4.66667 "$x" "ss"
x=$(echo "1 2 4"       | ./nums --sum2)                          && assert_eq 4.66667 "$x" "sum2"
x=$(echo "1 2 4"       | ./nums --sum-of-squares)                && assert_eq 4.66667 "$x" "sum-of-squares"

x=$(echo "1 2 4"       | ./nums --variance)                      && assert_eq 1.55556 "$x" "variance"
x=$(echo "1 2 4"       | ./nums --var)                           && assert_eq 1.55556 "$x" "var"

x=$(echo "1 2 4"       | ./nums --standard-deviation)            && assert_eq 1.24722 "$x" "standard-deviation"
x=$(echo "1 2 4"       | ./nums --stdev)                         && assert_eq 1.24722 "$x" "stdev"
x=$(echo "1 2 4"       | ./nums --sd)                            && assert_eq 1.24722 "$x" "sd"

x=$(echo "1 2 4"       | ./nums --coefficient-of-variance)       && assert_eq 0.534522 "$x" "coefficient-of-variance"
x=$(echo "1 2 4"       | ./nums --covar)                         && assert_eq 0.534522 "$x" "covar"
x=$(echo "1 2 4"       | ./nums --cv)                            && assert_eq 0.534522 "$x" "cv"

## Filters

x=$(echo "1 2 2 3"     | ./nums --unique)                        && assert_eq "1 2 3" "$x" "unique"
x=$(echo "1 2 2 3"     | ./nums --effect-unique)                 && assert_eq "1 2 3" "$x" "effect-unique"
x=$(echo "1 2 2 3"     | ./nums --select-unique)                 && assert_eq "1 3" "$x" "select-unique"
x=$(echo "1 2 2 3"     | ./nums --reject-unique)                 && assert_eq "2" "$x" "reject-unique"

x=$(echo "3 1 2"       | ./nums --sort)                          && assert_eq "1 2 3" "$x" "sort"
x=$(echo "3 1 2"       | ./nums --sort-asc)                      && assert_eq "1 2 3" "$x" "sort-asc"
x=$(echo "3 1 2"       | ./nums --sort-desc)                     && assert_eq "3 2 1" "$x" "sort-desc"

## Input

x=$(echo "1 2\n3 4"    | ./nums --input-fields --sum)            && assert_eq "3\n7" "$x" "input-fields"
x=$(echo "1 2\n3 4"    | ./nums --input-records --sum)           && assert_eq "21" "$x" "input-records"
x=$(echo "1 2 4"       | ./nums --input-is-sorted)               && assert_eq "?" "$x" "input-is-sorted" #TODO
x=$(echo "1 2 4"       | ./nums --input-is-unique)               && assert_eq "?" "$x" "input-is-unique" #TODO

## Output

x=$(echo "1 2 4"       | ./nums --n --min --max --output-label)   && assert_eq "n 3 minimum 1 maximum 4" "$x" "output-label"
x=$(echo "1 2 4"       | ./nums --n --min --max --output-csv)     && assert_eq "3,1,4" "$x" "output-csv"
x=$(echo "1 2 4"       | ./nums --n --min --max --output-tsv)     && assert_eq "3"$'\t'"1"$'\t'"4" "$x" "output-tsv"
